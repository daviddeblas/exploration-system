<?xml version="1.1"?>
<launch>

    <arg name="robot_namespace_robot1" default="/"/>
    <arg name="robot_namespace_robot2" default="/robot2/"/>
    <arg name="world_name" default="$(find limo_gazebo_sim)/worlds/personalised.world"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>

    <param name="robot_description" command="$(find xacro)/xacro '$(find limo_description)/urdf/limo_four_diff.xacro'
        robot_namespace:=$(arg robot_namespace_robot1)" />
    
    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.0"/>
    <arg name="yaw" default="0.0"/>

    <group ns='limo'>
        <param name="map_merge/init_pose_x"   value="-4.0"/>
        <param name="map_merge/init_pose_y"   value="5.0"/>
        <param name="map_merge/init_pose_z"   value="$(arg z)"/>
        <param name="map_merge/init_pose_yaw" value="$(arg yaw)"  />
    </group>

    <node name="spawn_limo_model" pkg="gazebo_ros" type="spawn_model" args="-x -4
            -y 5
            -z $(arg z)
            -Y $(arg yaw)
            -unpause
            -urdf
            -param robot_description
            -model 'limo$(arg robot_namespace_robot1)'" />
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find limo_gazebo_sim)/config/limo_four_diff_control.yaml" command="load"/>

    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner"
        respawn="false" output="screen" args="limo_state_controller"/>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <include file="$(find limo_gazebo_sim)/launch/gmapping.launch" />

    <group ns="robot2">

        <param name="map_merge/init_pose_x"   value="-5.0"/>
        <param name="map_merge/init_pose_y"   value="5.0"/>
        <param name="map_merge/init_pose_z"   value="$(arg z)"/>
        <param name="map_merge/init_pose_yaw" value="-1.57"  />

        <arg name="model" default="$(find simple_quad)/src/description/simple_quad.urdf"/>
        <param name="robot2_description" command="$(find xacro)/xacro $(arg model)"/>
        <node name="robot2_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

        <node name="spawn_simple_quad" pkg="gazebo_ros" type="spawn_model" args="-x -5.0 -y 5.0 -z 2.125 -Y -1.57 -unpause -urdf -param robot2_description -model $(arg model) robot_namespace:=$(arg robot_namespace_robot2)"/>
    </group>
    <include file="$(find simple_quad)/launch/cognifly_pointcloud.launch" />
    <node pkg="multirobot_map_merge" type="map_merge" respawn="false" name="map_merge" output="screen">
        <param name="robot_map_topic" value="map"/>
        <param name="robot_namespace" value=""/>
        <param name="merged_map_topic" value="map_merge"/>
        <param name="world_frame" value="map_merge"/>
        <param name="known_init_poses" value="true"/>
        <param name="merging_rate" value="0.25"/>
        <param name="discovery_rate" value="0.05"/>
        <param name="estimation_rate" value="0.1"/>
        <param name="estimation_confidence" value="1.0"/>
    </node>

    <node pkg="tf" type="static_transform_publisher" name="world_to_map_broadcaster"  args="0 0 0 0 0 0 main_map map 100"/>
    <node pkg="tf" type="static_transform_publisher" name="world_to_simple_quad_map_broadcaster" args="0 0 0 0 0 0 main_map simple_quad_map 100"/>
    <node pkg="tf" type="static_transform_publisher" name="map_to_simple_quad_odom_broadcaster" args="0 0 0 0 0 0 simple_quad_map simple_quad_odom_global 100"/>
</launch>
