# global_costmap_params
global_costmap:
  global_frame: map
  robot_base_frame: base_link
  update_frequency: 5.0
  static_map: true
  plugins:
    - { name: static_layer, type: "costmap_2d::StaticLayer" }
    - { name: inflation_layer, type: "costmap_2d::InflationLayer" }

# local_costmap_params
local_costmap:
  global_frame: odom
  robot_base_frame: base_link
  update_frequency: 5.0
  publish_frequency: 5.0
  width: 5.0
  height: 5.0
  resolution: 0.05
  plugins:
    - { name: obstacles_laser, type: "costmap_2d::ObstacleLayer" }
    - { name: inflation, type: "costmap_2d::InflationLayer" }

# TrajectoryPlannerROS
TrajectoryPlannerROS:
  max_vel_x: 0.5
  min_vel_x: 0.1
  max_rotational_vel: 1.0
  min_in_place_rotational_vel: 0.4
  acc_lim_th: 3.2
  acc_lim_x: 2.5
  holonomic_robot: false
  yaw_goal_tolerance: 0.3
  xy_goal_tolerance: 0.2
  meter_scoring: true
  pdist_scale: 0.75
  gdist_scale: 0.8
  occdist_scale: 0.01

# base_local_planner_params
base_local_planner:
  type: "base_local_planner/TrajectoryPlannerROS"
  max_vel_x: 0.5
  min_vel_x: 0.1
  max_rotational_vel: 1.0
  min_in_place_rotational_vel: 0.4
  acc_lim_th: 3.2
  acc_lim_x: 2.5
  holonomic_robot: false
  yaw_goal_tolerance: 0.3
  xy_goal_tolerance: 0.2
  meter_scoring: true
  pdist_scale: 0.75
  gdist_scale: 0.8
  occdist_scale: 0.01
  footprint: [[0.2, 0.2], [0.2, -0.2], [-0.2, -0.2], [-0.2, 0.2]]
  # set the LIDAR as the obstacle source
  obstacle_layer:
    observation_sources: laser_scan_sensor
    laser_scan_sensor:
      {
        sensor_frame: laser_link,
        data_type: LaserScan,
        topic: /limo/scan,
        marking: true,
        clearing: true,
      }

# recovery_behavior_params
recovery_behaviors:
  enabled: true
  behavior_list:
    - name: back_up
      type: clear_costmap_recovery/ClearCostmapRecovery
    - name: rotate_recovery
      type: rotate_recovery/RotateRecovery
    - name: outlier_detection
      type: outlier_detection/OutlierDetection
